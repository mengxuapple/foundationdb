testTitle=BackupAndParallelRestoreWithAtomicOp
    testName=AtomicOps
    nodeCount=30000
; Make ops space only 1 key per group
;    nodeCount=100
    transactionsPerSecond=2500.0
;    transactionsPerSecond=500.0
;    transactionsPerSecond=100.0
;    nodeCount=4
;    transactionsPerSecond=250.0
    testDuration=30.0
    clearAfterTest=false
; Specify a type of atomicOp
;	opType=0
;	actorsPerClient=1

; AtomicBackupCorrectness.txt does not mix Cycle and AtomicOps workloads
;    testName=Cycle
;;    nodeCount=30000
;;    nodeCount=1000
;    nodeCount=4
;;    transactionsPerSecond=2.0
;;    transactionsPerSecond=10.0
;;    transactionsPerSecond=20.0
;    transactionsPerSecond=2500.0
;    testDuration=30.0
;    expectedRate=0
;    clearAfterTest=false
;	keyPrefix=a

; Each testName=RunRestoreWorkerWorkload creates a restore worker
; We need at least 3 restore workers: master, loader, and applier
    testName=RunRestoreWorkerWorkload

; Test case for parallel restore
    testName=BackupAndParallelRestoreCorrectness
    backupAfter=10.0
    restoreAfter=60.0
    clearAfterTest=false
    simBackupAgents=BackupToFile
    backupRangesCount=-1

    testName=RandomClogging
    testDuration=90.0
	
;    testName=Rollback
;    meanDelay=90.0
;    testDuration=90.0

; Do NOT consider machine crash yet
;    testName=Attrition
;    machinesToKill=10
;    machinesToLeave=3
;    reboot=true
;    testDuration=90.0

;    testName=Attrition
;    machinesToKill=10
;    machinesToLeave=3
;    reboot=true
;    testDuration=90.0

; Disable buggify for parallel restore
buggify=off
;testDuration=360000 ;not work
;timeout is in seconds
timeout=360000
